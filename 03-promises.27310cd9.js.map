{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAkBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACvC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC1BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE7BA,EAAM,G,CA1BCQ,SAASC,cAAc,SAC/BC,iBAAiB,UACtB,SAAoBC,GAClBA,EAAMC,iBACN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SAC/C,IAAIC,GAAcL,EAAMM,MACtB,IAAK,IAAIC,EAAQ,EAAGA,GAASL,EAAOI,MAAOC,GAAS,EAClDtB,EAAcsB,EAAOF,GAClBG,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEhEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,IAEhEkB,IAAaJ,EAAKK,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\nconst form = document.querySelector('.form')\nform.addEventListener('submit', formSubmit)\nfunction formSubmit(event) {\n  event.preventDefault()\n  const { delay, step, amount } = event.target.elements\nlet delayValue = +delay.value\n  for (let index = 1; index <= amount.value; index += 1) {\n    createPromise(index, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayValue+=+step.value\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    },delay)\n})\n}  \n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","target","elements","delayValue","value","index","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.27310cd9.js.map"}